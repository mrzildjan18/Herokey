3. 
SELECT COUNT(INV_NUMBER) FROM INVOICE;

4. 
SELECT COUNT(CUS_BALANCE) FROM CUSTOMER
WHERE CUS_BALANCE >= 500;

5. 
SELECT CUSTOMER.CUS_CODE, INVOICE.INV_NUMBER, INVOICE.INV_DATE, PRODUCT.P_DESCRIPT, LINE.LINE_UNITS, LINE.LINE_PRICE
FROM CUSTOMER, INVOICE, PRODUCT, LINE
WHERE (CUSTOMER.CUS_CODE = INVOICE.CUS_CODE) AND (INVOICE.INV_NUMBER = LINE.INV_NUMBER) AND (LINE.P_CODE = PRODUCT.P_CODE)
ORDER BY CUSTOMER.CUS_CODE, INVOICE.INV_NUMBER;


6. 
SELECT CUSTOMER.CUS_CODE, INVOICE.INV_NUMBER, PRODUCT.P_DESCRIPT, LINE.LINE_UNITS, LINE.LINE_PRICE, (LINE.LINE_UNITS * LINE.LINE_PRICE) AS SUBTOTAL
FROM CUSTOMER, INVOICE, PRODUCT, LINE
WHERE (CUSTOMER.CUS_CODE = INVOICE.CUS_CODE) AND (INVOICE.INV_NUMBER = LINE.INV_NUMBER) AND (LINE.P_CODE = PRODUCT.P_CODE)
ORDER BY CUSTOMER.CUS_CODE, INVOICE.INV_NUMBER;

7. 
SELECT CUSTOMER.CUS_CODE, CUSTOMER.CUS_BALANCE, SUM(LINE.LINE_UNITS * LINE.LINE_PRICE) AS "TOTAL PURCHASE"
FROM CUSTOMER, INVOICE, LINE
WHERE (CUSTOMER.CUS_CODE = INVOICE.CUS_CODE) AND (INVOICE.INV_NUMBER = LINE.INV_NUMBER)
GROUP BY CUSTOMER.CUS_CODE, CUSTOMER.CUS_BALANCE
ORDER BY CUSTOMER.CUS_CODE;

8. 

SELECT CUSTOMER.CUS_CODE, CUSTOMER.CUS_BALANCE, SUM(LINE.LINE_UNITS * LINE.LINE_PRICE) AS "TOTAL PURCHASE", COUNT(DISTINCT LINE.LINE_NUMBER) AS "NUMBER OF PURCHASE"
FROM CUSTOMER, INVOICE, LINE
WHERE (CUSTOMER.CUS_CODE = INVOICE.CUS_CODE) AND (INVOICE.INV_NUMBER = LINE.INV_NUMBER)
GROUP BY CUSTOMER.CUS_CODE, CUSTOMER.CUS_BALANCE;


SELECT CUSTOMER.CUS_CODE, CUSTOMER.CUS_BALANCE, COUNT(DISTINCT LINE.LINE_NUMBER) AS "NUMBER OF PURCHASE", SUM(LINE.LINE_UNITS * LINE.LINE_PRICE) AS "TOTAL PURCHASE"
FROM CUSTOMER
INNER JOIN INVOICE ON CUSTOMER.CUS_CODE = INVOICE.CUS_CODE
INNER JOIN LINE ON INVOICE.INV_NUMBER = LINE.INV_NUMBER
GROUP BY CUSTOMER.CUS_CODE, CUSTOMER.CUS_BALANCE

9. 


10.
SELECT DISTINCT INVOICE.INV_NUMBER, (SELECT SUM(LINE.LINE_UNITS * PRODUCT.P_PRICE) 
FROM LINE, PRODUCT WHERE LINE.P_CODE = PRODUCT.P_CODE AND LINE.INV_NUMBER = INVOICE.INV_NUMBER) AS "INVOICE TOTAL"
FROM INVOICE, LINE, PRODUCT
WHERE INVOICE.INV_NUMBER = LINE.INV_NUMBER AND LINE.P_CODE = PRODUCT.P_CODE;

11. 
SELECT DISTINCT CUSTOMER.CUS_CODE, INVOICE.INV_NUMBER, (SELECT SUM(LINE.LINE_UNITS * PRODUCT.P_PRICE) 
FROM LINE, PRODUCT WHERE LINE.P_CODE = PRODUCT.P_CODE AND LINE.INV_NUMBER = INVOICE.INV_NUMBER) AS "INVOICE TOTAL"
FROM CUSTOMER, INVOICE, LINE, PRODUCT
WHERE CUSTOMER.CUS_CODE = INVOICE.CUS_CODE AND INVOICE.INV_NUMBER = LINE.INV_NUMBER AND LINE.P_CODE = PRODUCT.P_CODE;

12.
SELECT CUSTOMER.CUS_CODE, COUNT(DISTINCT INVOICE.INV_NUMBER) AS "NUMBER OF INVOICE", SUM(LINE.LINE_UNITS * LINE.LINE_PRICE) AS "TOTAL CUSTOMER PURCHASE"
FROM CUSTOMER, INVOICE, LINE
WHERE (CUSTOMER.CUS_CODE = INVOICE.CUS_CODE) AND (INVOICE.INV_NUMBER = LINE.INV_NUMBER)
GROUP BY CUSTOMER.CUS_CODE, CUSTOMER.CUS_BALANCE;

13.
SELECT COUNT(DISTINCT INV_NUMBER) AS "TOTAL NUMBER OF INVOICES", SUM(TOTAL_PURCHASE) AS "INVOICE TOTAL", MIN(TOTAL_PURCHASE) AS "SMALLEST PURCHASE AMOUNT", MAX(TOTAL_PURCHASE) AS "LARGEST PURCHASE AMOUNT", AVG(TOTAL_PURCHASE) AS "AVERAGE PURCHASE AMOUNT"
FROM (SELECT INV_NUMBER, SUM(LINE_UNITS * LINE_PRICE) AS "TOTAL PURCHASE" FROM LINE GROUP BY INV_NUMBER)

SELECT COUNT(DISTINCT INVOICE.INV_NUMBER) AS "TOTAL INVOICE",


